<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:WebComboBox">

    <!--ContextMenu样式-->
    <Style x:Key="myContextMenu" TargetType="{x:Type ContextMenu}">
        <Setter Property="HasDropShadow" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Grid.IsSharedSizeScope" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Grid x:Name="RootGrid">
                        <Border x:Name="Border" Margin="6" CornerRadius="0" Background="White" Opacity="1" BorderThickness="1" BorderBrush="#ff808080">
                            <Border.Effect>
                                <DropShadowEffect Opacity="0.5" ShadowDepth="8"  RenderingBias="Quality" />
                            </Border.Effect>
                            <ItemsPresenter x:Name="MenuItemsPresenter"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--ContextMenu Item样式-->
    <Style x:Key="myMenuItem"  TargetType="{x:Type MenuItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border Margin="0" x:Name="templateRoot" CornerRadius="0" BorderBrush="#BABABA" BorderThickness="0" SnapsToDevicePixels="True">
                        <Border.Background>
                            <SolidColorBrush x:Name="MyAnimatedBrushBackground" Color="Transparent" />
                        </Border.Background>
                        <Grid Height="28">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
                                <ColumnDefinition Width="22"/>
                            </Grid.ColumnDefinitions>
                            <!--占位-->
                            <Border Margin="1" Width="Auto" Height="{Binding Height}"  CornerRadius="3"/>
                            <!--显示选中标记-->
                            <StackPanel Orientation="Horizontal" Grid.Column="1"  Margin="8,0,0,0">
                                <Image x:Name="mnuItemChecked"  Width="19" Height="19" Visibility="{Binding}" Source="Resources/Menucheck.png" HorizontalAlignment="Center"   VerticalAlignment="Center" />
                            </StackPanel>
                            <!--显示图标及菜单文字-->
                            <StackPanel Orientation="Horizontal" Grid.Column="1" Margin="0,0,0,0">
                                <Image x:Name="mnuIcon" Margin="0,0,0,0"  Width="16" Height="16" Stretch="None" Source="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}}" />
                                <ContentPresenter ContentSource="Icon"  Width="16" Height="16" Margin="-8,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" />
                                <Label x:Name="mnuText" Foreground="Black" FontFamily="{x:Static SystemFonts.MenuFontFamily}" FontSize="{x:Static SystemFonts.MenuFontSize}" Margin="8,0,15,0"  VerticalAlignment="Center" Content="{Binding Header, RelativeSource={RelativeSource TemplatedParent}}" />
                                <!--<TextBlock Text=" "/>-->
                            </StackPanel>
                            <!--显示快捷方式-->
                            <TextBlock x:Name="mnuShortCutText" Visibility="{Binding}" Grid.Column="4" Opacity="0.7" Foreground="{Binding}" Margin="8,0,15,0"  HorizontalAlignment="Right"  VerticalAlignment="Center" Text="{Binding InputGestureText, RelativeSource={RelativeSource TemplatedParent}}" />
                            <!--显示子菜单图标-->
                            <StackPanel Orientation="Horizontal" Grid.Column="5" Margin="0,0,0,0" HorizontalAlignment="Left" Width="30" Height="30">
                                <Image x:Name="mnuHaveSubmenu"  Width="22" Height="10" Visibility="{Binding}" Source="Resources/MenuArrow.png" HorizontalAlignment="Left"   VerticalAlignment="Center" />
                            </StackPanel>
                            <!--显示子菜单列表-->
                            <Popup Placement="Right" x:Name="SubMenuPopup" AllowsTransparency="True" Focusable="False" IsOpen="{TemplateBinding IsSubmenuOpen}" >
                                <ScrollViewer Background="Transparent" Opacity="0.95"  ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                                    <Border CornerRadius="3" x:Name="SubmenuBorder" Opacity="0.95" BorderBrush="Transparent" BorderThickness="2"  SnapsToDevicePixels="True"    >
                                        <Border.Background>
                                            <SolidColorBrush x:Name="MySubmenuAnimatedBrushBackground" Color="White" />
                                        </Border.Background>
                                        <Border.Effect>
                                            <DropShadowEffect Color="#FF6A6565" Opacity="0.8" RenderingBias="Quality" Direction="180" ShadowDepth="0" BlurRadius="5"/>
                                        </Border.Effect>
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                                    </Border>
                                </ScrollViewer>
                            </Popup>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Role" Value="SubMenuItem">
                            <Setter TargetName="mnuHaveSubmenu" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="Role" Value="SubmenuHeader">
                            <Setter TargetName="mnuHaveSubmenu" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="mnuItemChecked" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="mnuItemChecked" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="True">
                            <Setter TargetName="mnuText" Property="Foreground" Value="#000000"/>
                            <Setter TargetName="mnuShortCutText" Property="Foreground" Value="#2D2D30"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="mnuText" Property="Foreground" Value="White"/>
                            <Setter TargetName="mnuShortCutText" Property="Foreground" Value="White"/>
                            <Setter TargetName="templateRoot" Property="Background" Value="#383534"/>                            
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="mnuText" Property="Foreground" Value="DarkGray"/>
                            <Setter TargetName="mnuShortCutText" Property="Foreground" Value="DarkGray"/>
                        </Trigger>
                        <Trigger Property="InputGestureText" Value="">
                            <Setter TargetName="mnuShortCutText" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <!--菜单项鼠标悬停时的效果-->
                        <!--<MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>                                
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="MyAnimatedBrushBackground" Storyboard.TargetProperty="Color">
                                            <LinearColorKeyFrame Value="Transparent" KeyTime="00:00:00.0020000" />
                                            <LinearColorKeyFrame Value="#383534" KeyTime="00:00:00.0320000" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="MyAnimatedBrushBackground" Storyboard.TargetProperty="Color">
                                            <LinearColorKeyFrame Value="#383534" KeyTime="00:00:00.0020000" />
                                            <LinearColorKeyFrame Value="Transparent" KeyTime="00:00:00.0320000" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--ContextMenu 分隔符样式-->
    <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}"
       TargetType="{x:Type Separator}">
        <Setter Property="Height" Value="1" />
        <Setter Property="Margin" Value="28,2,0,2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Rectangle Width="{TemplateBinding Width}" 
                                   Height="2" 
                                   Fill="#0F99a0a9"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <ContextMenu x:Key="mnuUrlMenu" Style="{StaticResource ResourceKey=myContextMenu}" x:Name ="mUrlMenu">
        <MenuItem x:Name="mnuPasteAndLoad"  Header="粘贴并访问" Style="{StaticResource ResourceKey=myMenuItem}" />
        <MenuItem x:Name="mnuCopyUrlAndTitle" Header="复制标题与网址" Style="{StaticResource ResourceKey=myMenuItem}"/>
        <Separator Height="1" ></Separator>
        <MenuItem x:Name="mnuCutUrl"     Header="剪切(_T)"  Command="ApplicationCommands.Cut" InputGestureText="Ctrl+X" Style="{StaticResource ResourceKey=myMenuItem}"/>
        <MenuItem x:Name="mnuCopyUrl"    Header="复制(_C)"  Command="ApplicationCommands.Copy" InputGestureText="Ctrl+C" Style="{StaticResource ResourceKey=myMenuItem}"/>
        <MenuItem x:Name="mnuPasteUrl"   Header="粘贴(_V)"  Command="ApplicationCommands.Paste" InputGestureText="Ctrl+V" Style="{StaticResource ResourceKey=myMenuItem}"/>
        <MenuItem x:Name="mnuDeleteUrl"  Header="删除(_D)"  Command="ApplicationCommands.Delete" Style="{StaticResource ResourceKey=myMenuItem}"/>
        <Separator Height="1"></Separator>
        <MenuItem x:Name="mnuSelectAll"  Header="全选(_A)"  Command="ApplicationCommands.SelectAll" InputGestureText="Ctrl+A" Style="{StaticResource ResourceKey=myMenuItem}"/>
    </ContextMenu>

    <!-- ComboBox属性设置 浅色-->
    <ControlTemplate x:Key="cboxBlinkTemplate" TargetType="{x:Type local:WebComboBox}">
        <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
            </Grid.ColumnDefinitions>
            <!--<Popup x:Name="PART_Popup" AllowsTransparency="True" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                <DockPanel>
                    <Border x:Name="DropDownBorder" DockPanel.Dock="Top" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1,1,1,0" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                        <DockPanel  ScrollViewer.CanContentScroll="True" ScrollViewer.VerticalScrollBarVisibility="Visible"  ScrollViewer.HorizontalScrollBarVisibility="Visible"  >
                            <ScrollViewer x:Name="DropDownScrollViewer" DockPanel.Dock="Top">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>

                        </DockPanel>
                    </Border>
                    <Border  DockPanel.Dock="Bottom" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1,0,1,1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" >
                        <DockPanel x:Name="dpClearAllItem" DockPanel.Dock="Bottom" Visibility="Visible" HorizontalAlignment="Stretch" Height="32">
                            <DockPanel.Background>
                                <SolidColorBrush x:Name="MyAnimatedBrushBackground" Color="White" />
                            </DockPanel.Background>
                            <DockPanel.Triggers>
                                <EventTrigger RoutedEvent="Mouse.MouseEnter">
                                    <EventTrigger.Actions>
                                        <BeginStoryboard HandoffBehavior="Compose" >
                                            <Storyboard >
                                                <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="MyAnimatedBrushBackground" Storyboard.TargetProperty="Color">
                                                    <LinearColorKeyFrame Value="Transparent" KeyTime="00:00:00.0020000" />
                                                    <LinearColorKeyFrame Value="Gainsboro" KeyTime="00:00:00.1920000" />
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger.Actions>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="Mouse.MouseLeave">
                                    <EventTrigger.Actions>
                                        <BeginStoryboard HandoffBehavior="Compose" >
                                            <Storyboard >
                                                <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="MyAnimatedBrushBackground" Storyboard.TargetProperty="Color">
                                                    <LinearColorKeyFrame Value="Transparent" KeyTime="00:00:00.0020000" />
                                                    <LinearColorKeyFrame Value="White" KeyTime="00:00:00.1920000" />
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger.Actions>
                                </EventTrigger>
                            </DockPanel.Triggers>
                            <DockPanel LastChildFill="False" VerticalAlignment="Center"  HorizontalAlignment="Right" >
                                <TextBlock Text="清空地址栏下拉列表" Padding="2,0,16,0" DockPanel.Dock="Right" Foreground="Black" TextAlignment="Right" HorizontalAlignment="Center" VerticalAlignment="Center" ></TextBlock>
                                <Image Width="18" Height="18" DockPanel.Dock="Right" RenderOptions.BitmapScalingMode="Fant"  Source="{Binding DropDownClear,RelativeSource={RelativeSource TemplatedParent}}" />
                            </DockPanel>
                        </DockPanel>
                    </Border>
                </DockPanel>
            </Popup>-->
            <Popup x:Name="PART_Popup" AllowsTransparency="True" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                <Border x:Name="DropDownBorder" BorderBrush="DarkGray"  BorderThickness="1" Background="#fff2f2f2"  MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}" >
                    <StackPanel ScrollViewer.CanContentScroll="True" >
                        <ScrollViewer x:Name="DropDownScrollViewer" VerticalScrollBarVisibility="Auto" CanContentScroll="True" >
                            <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                    <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                                </Canvas>
                                <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Grid>
                        </ScrollViewer>
                        <DockPanel x:Name="dpClearAllItem" Visibility="Visible" HorizontalAlignment="Stretch" Height="32">
                            <DockPanel.Background>
                                <SolidColorBrush x:Name="MyAnimatedBrushBackground" Color="White" />
                            </DockPanel.Background>
                            <DockPanel.Triggers>
                                <EventTrigger RoutedEvent="Mouse.MouseEnter">
                                    <EventTrigger.Actions>
                                        <BeginStoryboard HandoffBehavior="Compose" >
                                            <Storyboard >
                                                <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="MyAnimatedBrushBackground" Storyboard.TargetProperty="Color">
                                                    <LinearColorKeyFrame Value="Transparent" KeyTime="00:00:00.0020000" />
                                                    <LinearColorKeyFrame Value="Gainsboro" KeyTime="00:00:00.1920000" />
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger.Actions>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="Mouse.MouseLeave">
                                    <EventTrigger.Actions>
                                        <BeginStoryboard HandoffBehavior="Compose" >
                                            <Storyboard >
                                                <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="MyAnimatedBrushBackground" Storyboard.TargetProperty="Color">
                                                    <LinearColorKeyFrame Value="Transparent" KeyTime="00:00:00.0020000" />
                                                    <LinearColorKeyFrame Value="White" KeyTime="00:00:00.1920000" />
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger.Actions>
                                </EventTrigger>
                            </DockPanel.Triggers>
                            <DockPanel LastChildFill="False" VerticalAlignment="Center"  HorizontalAlignment="Right" >
                                <TextBlock Text="清空地址栏下拉列表" Padding="2,0,16,0" DockPanel.Dock="Right" Foreground="Black" TextAlignment="Right" HorizontalAlignment="Center" VerticalAlignment="Center" ></TextBlock>
                                <Image Width="18" Height="18" DockPanel.Dock="Right" RenderOptions.BitmapScalingMode="Fant"  Source="{Binding DropDownClear,RelativeSource={RelativeSource TemplatedParent}}" />
                            </DockPanel>
                        </DockPanel>
                    </StackPanel>
                </Border>
            </Popup>
            <ToggleButton x:Name="toggleButton" 
                          BorderBrush="{TemplateBinding BorderBrush}" 
                          BorderThickness="{TemplateBinding BorderThickness}" 
                          Background="Transparent" Grid.ColumnSpan="2" 
                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                <ToggleButton.Style>
                    <Style TargetType="{x:Type ToggleButton}">
                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                        <Setter Property="IsTabStop" Value="False"/>
                        <Setter Property="Focusable" Value="False"/>
                        <Setter Property="ClickMode" Value="Press"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                    <Border x:Name="templateRoot" BorderBrush="Transparent" CornerRadius="2" BorderThickness="2" SnapsToDevicePixels="True">
                                        <Border.Background>
                                            <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                <GradientStop Color="Transparent" Offset="0"/>
                                                <GradientStop Color="Transparent" Offset="1"/>
                                            </LinearGradientBrush>
                                        </Border.Background>
                                        <Border x:Name="splitBorder" Visibility="Visible" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="True" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                            <Grid>
                                                <Path x:Name="Arrow" Visibility="Collapsed" Data="F1M0,0L2.667,2.66665 5.3334,0 5.3334,-1.78168 2.6667,0.88501 0,-1.78168 0,0z" Fill="#FF606060" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center"/>
                                                <Image x:Name="ArrowImg" Visibility="Visible" Margin="0,0,6,0" Width="8" Height="12" UseLayoutRounding="True" RenderOptions.BitmapScalingMode="Fant" Source="{Binding DropDownArrow, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type local:WebComboBox}}}" />
                                            </Grid>
                                        </Border>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type local:WebComboBox}}}" Value="true"/>
                                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Background" TargetName="templateRoot" Value="Transparent"/>
                                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="Transparent"/>
                                            <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                                        </MultiDataTrigger>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Fill" TargetName="Arrow" Value="Black"/>
                                        </Trigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type local:WebComboBox}}}" Value="false"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Background" TargetName="templateRoot" Value="Transparent"/>
                                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="Transparent"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type local:WebComboBox}}}" Value="true"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Background" TargetName="templateRoot" Value="Transparent"/>
                                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="Transparent"/>
                                            <Setter Property="Background" TargetName="splitBorder">
                                                <Setter.Value>
                                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                        <GradientStop Color="Transparent" Offset="0"/>
                                                        <GradientStop Color="Transparent" Offset="1"/>
                                                    </LinearGradientBrush>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                                        </MultiDataTrigger>
                                        <Trigger Property="IsPressed" Value="True">
                                            <Setter Property="Fill" TargetName="Arrow" Value="Black"/>
                                            <Setter Property="Background" TargetName="templateRoot" Value="Transparent"/>
                                        </Trigger>

                                        <Trigger Property="IsChecked" Value="true">
                                            <Setter TargetName="ArrowImg" Property="RenderTransform">
                                                <Setter.Value>
                                                    <RotateTransform CenterX="4" CenterY="3" Angle="180"></RotateTransform>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter TargetName="ArrowImg" Property="Margin" Value="0 0 6 0"/>
                                        </Trigger>

                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type local:WebComboBox}}}" Value="false"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Background" TargetName="templateRoot">
                                                <Setter.Value>
                                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                        <GradientStop Color="Transparent" Offset="0"/>
                                                        <GradientStop Color="Transparent" Offset="1"/>
                                                    </LinearGradientBrush>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="Transparent"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type local:WebComboBox}}}" Value="true"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Background" TargetName="templateRoot" Value="Transparent"/>
                                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="Transparent"/>
                                            <Setter Property="Background" TargetName="splitBorder">
                                                <Setter.Value>
                                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                        <GradientStop Color="Transparent" Offset="0"/>
                                                        <GradientStop Color="Transparent" Offset="1"/>
                                                    </LinearGradientBrush>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                                        </MultiDataTrigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Fill" TargetName="Arrow" Value="#FFBFBFBF"/>
                                        </Trigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type local:WebComboBox}}}" Value="false"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Background" TargetName="templateRoot" Value="Transparent"/>
                                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="Transparent"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type local:WebComboBox}}}" Value="true"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Background" TargetName="templateRoot" Value="Transparent"/>
                                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="Transparent"/>
                                            <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                                        </MultiDataTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ToggleButton.Style>
            </ToggleButton>
            <Border x:Name="Border" Background="Transparent" Margin="{TemplateBinding BorderThickness}">
                <Grid>
                    <DockPanel>                    
                        <TextBox x:Name="PART_EditableTextBox" TextAlignment="Left" 
                             ContextMenu="{StaticResource mnuUrlMenu}"
                             HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                             IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"  
                             Margin="{TemplateBinding Padding}" 
                             VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                            <TextBox.Style>
                                <Style TargetType="{x:Type TextBox}">
                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                    <Setter Property="AllowDrop" Value="True"/>
                                    <Setter Property="MinWidth" Value="0"/>
                                    <Setter Property="MinHeight" Value="0"/>
                                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                    <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
                                    <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type TextBox}">
                                                <ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding}" Value="false">
                                            <Setter Property="AutomationProperties.Name" Value="{Binding (AutomationProperties.Name), Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type local:WebComboBox}}}"/>
                                            <Setter Property="AutomationProperties.LabeledBy" Value="{Binding (AutomationProperties.LabeledBy), Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type local:WebComboBox}}}"/>
                                            <Setter Property="AutomationProperties.HelpText" Value="{Binding (AutomationProperties.HelpText), Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type local:WebComboBox}}}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding}" Value="false">
                                            <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBox.Style>
                        </TextBox>
                    </DockPanel>
                    <DockPanel x:Name="dpHighlightParent" Margin="0,0,24,0" VerticalAlignment="Center">
                        <TextBlock x:Name="tboUrlHighlight" Foreground="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type local:WebComboBox}}}" Margin="8,0,0,0" Cursor="IBeam"/>
                    </DockPanel>
                </Grid>
            </Border>
            <ContentPresenter x:Name="contentPresenter" 
                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" 
                              Content="{TemplateBinding SelectionBoxItem}" 
                              ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" 
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                              IsHitTestVisible="True" Margin="{TemplateBinding Padding}" 
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="False">
                <!--<Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                <Setter Property="Color" TargetName="shadow"  Value="#71000000"/>-->
            </Trigger>
            <Trigger Property="HasItems" Value="False">
                <Setter Property="Height" TargetName="DropDownBorder" Value="32"/>
            </Trigger>
            <Trigger Property="IsEditable" Value="False">
                <Setter Property="Visibility" TargetName="dpHighlightParent" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsEditable" Value="true">
                <Setter Property="Visibility" TargetName="dpHighlightParent" Value="Visible"/>
            </Trigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="True"/>
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
            </MultiTrigger>
            <Trigger Property="CanContentScroll" SourceName="DropDownScrollViewer" Value="False">
                <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="cboxItemBlinkStyle" TargetType="ComboBoxItem">
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Height" Value="32"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                        <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="False"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsKeyboardFocused" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="#dadada"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="Transparent"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True"/>
                                <Condition Property="IsMouseOver" Value="False"/>
                                <Condition Property="IsKeyboardFocused" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="#c2c2c2"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="Transparent"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="#7e8fa2"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="Transparent"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True"/>
                                <Condition Property="IsMouseOver" Value="False"/>
                                <Condition Property="IsKeyboardFocused" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="#c2c2c2"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="Transparent"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="False"/>
                                <Condition Property="IsMouseOver" Value="False"/>
                                <Condition Property="IsKeyboardFocused" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="Transparent"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="False"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsKeyboardFocused" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="#dadada"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="Transparent"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:WebComboBox}">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                    <GradientStop Color="#FFF9F8F8" Offset="0"/>
                    <GradientStop Color="#FFC6C6CA" Offset="0.75"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FocusVisualStyle"  Value="{x:Null}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Padding" Value="6,3,5,3"/>
        <Setter Property="IsTextSearchEnabled" Value="True"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Control.Template" Value="{StaticResource cboxBlinkTemplate}"/>
        <Setter Property="ItemContainerStyle"  Value="{StaticResource cboxItemBlinkStyle}"/>
    </Style>

    
</ResourceDictionary>
